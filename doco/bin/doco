#!/usr/bin/env node

// core
var path = require("path"),
    util = require("util"),
    
// dojo
    common = require(path.join(__dirname, "..", "common.js")),
    doco = require(path.join(__dirname, "..", "doco.js")),
    pkg = require(path.join(__dirname, '..', 'package.json')),
    
// bundled
    dox = doco.dox;

// Process command line arguments
var getopt = common.getopt(process.argv);
var argv = getopt['argv']; // argv unshifted by 2
var opt = getopt['opt']; // options

var generator = "json";
if (typeof opt['gen'] == 'string') {
    generator = opt["gen"];
}

process.stdin.setEncoding('utf8');

var gotInput = false;

if (!opt.w && !opt.wait) {
    setTimeout(function() {
        if (!gotInput) {
            process.stderr.write([
                "",
                "  _| _  _ _ ".green.bold,
                " (_|(_)(_(_)".green.bold+" v"+pkg['version'],
                ""
            ].join('\n')+'\n');
            process.stderr.write(" Usage:"+" doco ".green.bold+
                "[".grey.bold+"--gen=json|markdown|html"+"] ".grey.bold+
                "[".grey.bold+"--wait"+"] ".grey.bold+
                "< "+
                "<".grey.bold+"sourcefile"+">".grey.bold+" "
                +"[".grey.bold+"> outputfile"+"]".grey.bold+"\n\n"+
                " Legend:"+" <required> [optional]\n".grey.bold
            );
            common.fail("Give me input!", "doco");
        }
    }, 3000);
}

var buf = '';
process.stdin.on('data', function(chunk) {
    buf += chunk;
    gotInput = true;
});
process.stdin.on('end', function(){
    if (opt.d || opt.debug) {
        process.stdout.write(util.inspect(obj, false, Infinity, true) + '\n');
        process.exit(0);
    }
    process.stdout.write(doco.doco(buf, generator));
    
}).resume();
